name: deer-deploy-java-spring

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      application:
        required: true
        type: string
      profile:
        required: true
        type: string
      s3_bucket_name:
        required: true
        type: string
      java-memory:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: zulu
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: :${{ inputs.application }}:build

      - name: Generate environment file
        run: |
          echo "SERVICE=${{ inputs.service }}" > ./.env
          echo "APPLICATION=${{ inputs.application }}" >> ./.env
          echo "PROFILE=${{ inputs.profile }}" >> ./.env
          echo "JAVA_MEMORY=${{ inputs.java-memory }}" >> ./.env
        working-directory: ./${{ inputs.application }}

      - name: Make zip file
        run: zip --symlinks -r ./${{ github.sha }}.zip . > /dev/null
        shell: bash
        working-directory: ./${{ inputs.application }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./${{ github.sha }}.zip s3://${{ inputs.s3_bucket_name }}/${{ inputs.application }}/${{ github.sha }}.zip
        working-directory: ./${{ inputs.application }}

      - name: Code Deploy
        run: >
          aws deploy create-deployment
          --application-name ${{ inputs.service }}-${{ inputs.profile }}
          --deployment-group-name ${{ inputs.application }}
          --s3-location bucket=${{ inputs.s3_bucket_name }},bundleType=zip,key=${{ inputs.application }}/${{ github.sha }}.zip