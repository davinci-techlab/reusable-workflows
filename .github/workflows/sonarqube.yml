name: Sonarqube

on:
  workflow_call:
    inputs:
      install_dependency:
        description: '의존성 설치 커맨드'
        default: 'npm install'
        required: false
        type: string
      report_url:
        description: 'SonarQube 리포트 링크. 예) http://sonarqube.deermobility.com:9000/dashboard?id=deer-develop-carri-web'
        required: true
        type: string
    secrets:
      SONAR_HOST_URL:
        required: true
      SONAR_TOKEN:
        required: true

env:
  SUCCESS_COMMENT_BODY: '✅ SonarQube에서 정적분석을 끝냈습니다: [Qodana 분석 결과 조회](${{ inputs.report_url }})'
  FAILURE_COMMENT_BODY: '❌ SonarQube 정적분석에 실패했습니다. GitHub Actions 로그를 참고하세요.'

jobs:
  SonarScanner:
    runs-on: ubuntu-latest
    name: Sonar Scanner
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: ${{ inputs.install_dependency }}
      - name: Scan code
        uses: vtex/action-sonarqube@main
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }} # https://docs.github.com/en/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          host: ${{ secrets.SONAR_HOST_URL }} # Variable set in the Github Secrets
          token: ${{ secrets.SONAR_TOKEN }} # Variable set in the Github Secrets
      - name: "Add pull request comment when success"
        if: ${{ github.event_name == 'pull_request' && success() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.SUCCESS_COMMENT_BODY }}'
            })
      - name: "Add pull request comment when failure"
        if: ${{ github.event_name == 'pull_request' && failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.FAILURE_COMMENT_BODY }}'
            })
      - name: "Add commit comment when success"
        if: ${{ github.event_name != 'pull_request' && success() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: '${{ github.sha }}',
              body: '${{ env.SUCCESS_COMMENT_BODY }}'
            })
      - name: "Add commit comment when failure"
        if: ${{ github.event_name != 'pull_request' && failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: '${{ github.sha }}',
              body: '${{ env.FAILURE_COMMENT_BODY }}'
            })